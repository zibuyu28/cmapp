syntax = "proto3";

option go_package = "./driver";

package driver;

import "mdriver.proto";

// ChainDriver chain driver service
service ChainDriver {
  // GetCreateFlags get create flags
  rpc GetCreateFlags (Empty) returns (Flags) {
  }

  // SetConfigFromFlags set driver config from flags
  rpc SetConfigFromFlags (Flags) returns (Empty) {
  }

  // InitChain create a chain to store
  rpc InitChain (Empty) returns (Chain) {
  }
  // CreateChainExec execute create chain action
  rpc CreateChainExec (Chain) returns (Chain) {
  }

  // Exit driver exit
  rpc Exit(Empty) returns (Empty) {}
}

message Node {
  string Name = 1;
  string UUID = 2;
  string Type = 3;
  enum StateE {
      Handling = 0;
      Normal = 1;
      Abnormal = 2;
  }
  StateE State = 5; // 1处理中，2正常，3异常
  string Message = 6;
  int32 MachineID = 7;
  int32 ChainID = 8;
  repeated string Tags = 9;
  map<string, string> CustomInfo = 10;
}

message Chain {
  string Name = 1;
  string UUID = 2;
  string Type = 3;
  string Version = 4;
  enum StateE {
      Handling = 0;
      Normal = 1;
      Abnormal = 2;
  }
  StateE State = 5; // 1处理中，2正常，3异常
  int32 DriverID = 6;
  repeated string Tags = 7;
  map<string, string> CustomInfo = 8;
  repeated Node Nodes = 9;
}





